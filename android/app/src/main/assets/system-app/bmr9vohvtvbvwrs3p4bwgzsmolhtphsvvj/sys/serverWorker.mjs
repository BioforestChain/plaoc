const t=self,n=[];t.addEventListener("install",(function(n){n.waitUntil(t.skipWaiting())})),t.addEventListener("activate",(function(n){n.waitUntil(t.clients.claim())})),t.addEventListener("fetch",(async function(t){const e=t.request;e.method.match(/POST/i)?function(t){t.respondWith(async function(){await async function(t,e){if(null===t.body)return;const a=await t.arrayBuffer(),s=function(t){let n=0,e=524288;const a=[];do{a.push(t.subarray(n,n+e)),n+=e}while(t.byteLength>n);return a}(new Uint8Array(a)),i=[];await Promise.all(s.map((async t=>{const n=await async function(t,n){const e=t.request;return await fetch(`${e.url}?upload=${n}`,{headers:e.headers,method:"GET",mode:"cors"})}(e,t);i.push(await n.text())}))),n.push(new Response(String(i)))}(t.request,t);const e={next:async()=>{const t=n.shift();return t?{value:t,done:!1}:{value:new Response,done:!0}}},{value:a,done:s}=await e.next();return a}())}(t):t.respondWith(async function(){return await fetch(e)}())})),self.export="";