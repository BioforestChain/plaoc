{"version":3,"file":"index.mjs","sources":["../../../../../../../../../../../android-deno-runtime-example/plaoc/core/dist/esm/deno/index.mjs"],"sourcesContent":["import { js_to_rust_buffer, eval_js } from \"./rust.op.mjs\";\nconst versionView = new Uint8Array(new ArrayBuffer(1));\nconst headView = new Uint8Array(new ArrayBuffer(2));\nversionView[0] = 1;\nclass Deno {\n  createHeader() {\n    const tail = headView.length - 1;\n    headView[tail] += 1;\n    if ((headView[tail] & 255) === 255) {\n      this.bitLeftShifts();\n      headView[tail] = 0;\n    }\n  }\n  callFunction(handleFn, data = \"''\") {\n    const uint8Array = this.structureBinary(handleFn, data);\n    js_to_rust_buffer(uint8Array);\n  }\n  callEvalJsStringFunction(handleFn, data = \"''\") {\n    const uint8Array = this.structureBinary(handleFn, data);\n    eval_js(uint8Array);\n  }\n  callEvalJsByteFunction(handleFn, data = \"''\") {\n    const buffer = new TextEncoder().encode(data);\n    const uint8Array = this.structureBinary(handleFn, buffer);\n    eval_js(uint8Array);\n  }\n  structureBinary(fn, data = \"\") {\n    const message = `{\"function\":[\"${fn}\"],\"data\":${data}}`;\n    const encoder = new TextEncoder();\n    const uint8Array = encoder.encode(message);\n    return this.concatenate(versionView, headView, uint8Array);\n  }\n  bitLeftShifts() {\n    let rest = 0;\n    for (let i = headView.length - 1; i >= 0; i--) {\n      const v = headView[i];\n      const newRest = (v & 128) > 0 ? 1 : 0;\n      headView[i] = (v << 1 | rest) & 255;\n      rest = newRest;\n    }\n  }\n  concatenate(...arrays) {\n    let totalLength = 0;\n    for (let arr of arrays) {\n      totalLength += arr.length;\n    }\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    for (let arr of arrays) {\n      result.set(arr, offset);\n      offset += arr.length;\n    }\n    return result;\n  }\n}\nconst deno = new Deno();\nexport { deno };\n//# sourceMappingURL=index.mjs.map\n"],"names":[],"mappings":";AACA,MAAM,cAAc,IAAI,WAAW,IAAI,YAAY,CAAC,CAAC;AACrD,MAAM,WAAW,IAAI,WAAW,IAAI,YAAY,CAAC,CAAC;AAClD,YAAY,KAAK;AACjB,MAAM,KAAK;AAAA,EACT,eAAe;AACb,UAAM,OAAO,SAAS,SAAS;AAC/B,aAAS,SAAS;AAClB,QAAK,UAAS,QAAQ,SAAS,KAAK;AAClC,WAAK,cAAa;AAClB,eAAS,QAAQ;AAAA,IAClB;AAAA,EACF;AAAA,EACD,aAAa,UAAU,OAAO,MAAM;AAClC,UAAM,aAAa,KAAK,gBAAgB,UAAU,IAAI;AACtD,sBAAkB,UAAU;AAAA,EAC7B;AAAA,EACD,yBAAyB,UAAU,OAAO,MAAM;AAC9C,UAAM,aAAa,KAAK,gBAAgB,UAAU,IAAI;AACtD,YAAQ,UAAU;AAAA,EACnB;AAAA,EACD,uBAAuB,UAAU,OAAO,MAAM;AAC5C,UAAM,SAAS,IAAI,YAAa,EAAC,OAAO,IAAI;AAC5C,UAAM,aAAa,KAAK,gBAAgB,UAAU,MAAM;AACxD,YAAQ,UAAU;AAAA,EACnB;AAAA,EACD,gBAAgB,IAAI,OAAO,IAAI;AAC7B,UAAM,UAAU,iBAAiB,eAAe;AAChD,UAAM,UAAU,IAAI;AACpB,UAAM,aAAa,QAAQ,OAAO,OAAO;AACzC,WAAO,KAAK,YAAY,aAAa,UAAU,UAAU;AAAA,EAC1D;AAAA,EACD,gBAAgB;AACd,QAAI,OAAO;AACX,aAAS,IAAI,SAAS,SAAS,GAAG,KAAK,GAAG,KAAK;AAC7C,YAAM,IAAI,SAAS;AACnB,YAAM,UAAW,KAAI,OAAO,IAAI,IAAI;AACpC,eAAS,KAAM,MAAK,IAAI,QAAQ;AAChC,aAAO;AAAA,IACR;AAAA,EACF;AAAA,EACD,eAAe,QAAQ;AACrB,QAAI,cAAc;AAClB,aAAS,OAAO,QAAQ;AACtB,qBAAe,IAAI;AAAA,IACpB;AACD,UAAM,SAAS,IAAI,WAAW,WAAW;AACzC,QAAI,SAAS;AACb,aAAS,OAAO,QAAQ;AACtB,aAAO,IAAI,KAAK,MAAM;AACtB,gBAAU,IAAI;AAAA,IACf;AACD,WAAO;AAAA,EACR;AACH;AACK,MAAC,OAAO,IAAI,KAAI;;"}