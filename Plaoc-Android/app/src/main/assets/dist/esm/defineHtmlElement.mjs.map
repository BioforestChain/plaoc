{"version":3,"file":"defineHtmlElement.mjs","sources":["../../defineHtmlElement.ts"],"sourcesContent":["import { Evt } from \"./EvtOut\";\r\n\r\nexport const defineHtmlElement = <T extends {}>(\r\n  names: { tag_name: string; tagName: string },\r\n  apis: T,\r\n  lifecycle: { onCreate: () => unknown }\r\n) => {\r\n  const evt_hubs = new Set<Evt>();\r\n  const func_name_list: string[] = [];\r\n  const readonly_name_list: string[] = [];\r\n  const prop_name_list: string[] = [];\r\n  const define_list: [p: PropertyKey, attributes: PropertyDescriptor][] = [];\r\n\r\n  /// 获取所有的属性\r\n  const propDescMap = new Map<string, PropertyDescriptor>();\r\n  let value: any = apis;\r\n  do {\r\n    for (const [prop, desc] of Object.entries(\r\n      Object.getOwnPropertyDescriptors(value)\r\n    )) {\r\n      /// 忽略私有的\r\n      if (prop.startsWith(\"_\")) {\r\n        continue;\r\n      }\r\n\r\n      if (propDescMap.has(prop)) {\r\n        continue;\r\n      }\r\n      propDescMap.set(prop, desc);\r\n    }\r\n    value = Object.getPrototypeOf(apis);\r\n    if (value === Object.prototype) {\r\n      break;\r\n    }\r\n  } while (true);\r\n\r\n  /// 遍历所有的属性，进行动态生产\r\n  const handlePropDesc = (prop: string, desc: PropertyDescriptor) => {\r\n    if (prop.startsWith(\"on\") && typeof desc.get === \"function\") {\r\n      const eventName = prop.substring(2).toLowerCase();\r\n\r\n      let on_event: Function | null = null;\r\n      let on_evt: Evt | undefined;\r\n      define_list.push([\r\n        `on${eventName}`,\r\n        {\r\n          get() {\r\n            return on_event || null;\r\n          },\r\n          set(cb: Function) {\r\n            if (typeof cb === \"function\") {\r\n              on_event = cb;\r\n              if (on_evt === undefined) {\r\n                (async () => {\r\n                  const evt = (on_evt = desc.get!.call(apis) as unknown as Evt);\r\n                  evt_hubs.add(evt);\r\n                  for await (const data of evt) {\r\n                    const event = new CustomEvent(eventName, { detail: data });\r\n                    on_event?.(event);\r\n                  }\r\n                })();\r\n              }\r\n            } else {\r\n              on_event = null;\r\n              if (on_evt !== undefined) {\r\n                on_evt.return();\r\n                evt_hubs.delete(on_evt);\r\n              }\r\n            }\r\n          },\r\n        },\r\n      ]);\r\n    } else if (typeof desc.value === \"function\") {\r\n      func_name_list.push(prop);\r\n    } else if (\"value\" in desc) {\r\n      prop_name_list.push(prop);\r\n    } else if (\"set\" in desc) {\r\n      if (desc.set === undefined) {\r\n        readonly_name_list.push(prop);\r\n      } else {\r\n        prop_name_list.push(prop);\r\n      }\r\n    }\r\n  };\r\n  for (const [prop, desc] of propDescMap) {\r\n    handlePropDesc(prop, desc);\r\n  }\r\n\r\n  /// build html elemnet constructor\r\n  const HTMLContructor = Function(\r\n    \"apis\",\r\n    \"evt_hubs\",\r\n    \"lifecycle\",\r\n    `return class HTML${names.tagName} extends HTMLElement {\r\n        constructor(){\r\n            super()\r\n            lifecycle.onCreate && lifecycle.onCreate(this)\r\n        }\r\n        disconnctedCallback() {\r\n          for (const evt of evt_hubs) {\r\n            evt.return();\r\n          }\r\n        }\r\n        ${func_name_list\r\n          .map(\r\n            (func_name) =>\r\n              `${func_name}(...args) { return apis.${func_name}(...args) }`\r\n          )\r\n          .join(\"\\n\")}\r\n        ${readonly_name_list\r\n          .map(\r\n            (readonly_name) =>\r\n              `get ${readonly_name}() { return apis.${readonly_name} }`\r\n          )\r\n          .join(\"\\n\")}\r\n        ${prop_name_list\r\n          .map(\r\n            (prop_name) =>\r\n              `get ${prop_name}() { return apis.${prop_name} }\\n` +\r\n              `set ${prop_name}(v) { return apis.${prop_name}(v) }`\r\n          )\r\n          .join(\"\\n\")}\r\n      }`\r\n  )(apis, evt_hubs) as typeof HTMLElement;\r\n  customElements.define(names.tag_name, HTMLContructor);\r\n  return HTMLContructor;\r\n};\r\n"],"names":[],"mappings":"AAEO,MAAM,oBAAoB,CAC/B,OACA,MACA,cACG;AACG,QAAA,+BAAe;AACrB,QAAM,iBAA2B,CAAA;AACjC,QAAM,qBAA+B,CAAA;AACrC,QAAM,iBAA2B,CAAA;AAI3B,QAAA,kCAAkB;AACxB,MAAI,QAAa;AACd,KAAA;AACU,eAAA,CAAC,MAAM,SAAS,OAAO,QAChC,OAAO,0BAA0B,KAAK,CACxC,GAAG;AAEG,UAAA,KAAK,WAAW,GAAG,GAAG;AACxB;AAAA,MACF;AAEI,UAAA,YAAY,IAAI,IAAI,GAAG;AACzB;AAAA,MACF;AACY,kBAAA,IAAI,MAAM,IAAI;AAAA,IAC5B;AACQ,YAAA,OAAO,eAAe,IAAI;AAC9B,QAAA,UAAU,OAAO,WAAW;AAC9B;AAAA,IACF;AAAA,EACO,SAAA;AAGH,QAAA,iBAAiB,CAAC,MAAc,SAA6B;AACjE,QAAI,KAAK,WAAW,IAAI,KAAK,OAAO,KAAK,QAAQ,YAAY;AACzC,WAAK,UAAU,CAAC,EAAE,YAAY;AAAA,IAiCvC,WAAA,OAAO,KAAK,UAAU,YAAY;AAC3C,qBAAe,KAAK,IAAI;AAAA,IAAA,WACf,WAAW,MAAM;AAC1B,qBAAe,KAAK,IAAI;AAAA,IAAA,WACf,SAAS,MAAM;AACpB,UAAA,KAAK,QAAQ,QAAW;AAC1B,2BAAmB,KAAK,IAAI;AAAA,MAAA,OACvB;AACL,uBAAe,KAAK,IAAI;AAAA,MAC1B;AAAA,IACF;AAAA,EAAA;AAES,aAAA,CAAC,MAAM,SAAS,aAAa;AACtC,mBAAe,MAAM,IAAI;AAAA,EAC3B;AAGA,QAAM,iBAAiB,SACrB,QACA,YACA,aACA,oBAAoB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAUpB,eACC,IACC,CAAC,cACC,GAAG,oCAAoC,sBAC3C,EACC,KAAK,IAAI;AAAA,UACV,mBACC,IACC,CAAC,kBACC,OAAO,iCAAiC,iBAC5C,EACC,KAAK,IAAI;AAAA,UACV,eACC,IACC,CAAC,cACC,OAAO,6BAA6B;AAAA,MAC7B,8BAA8B,gBACzC,EACC,KAAK,IAAI;AAAA,QAElB,EAAE,MAAM,QAAQ;AACD,iBAAA,OAAO,MAAM,UAAU,cAAc;AAC7C,SAAA;AACT;;"}